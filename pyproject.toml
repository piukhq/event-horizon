[tool.poetry]
name = "event-horizon"
version = "0.0.0"
description = "BPL Internal Admin Site"
authors = ["Bink <bink@bink.bink>"]
readme = "README.md"
packages = [{include = "event_horizon"}]
repository = "https://github.com/binkhq/event-horizon"

[[tool.poetry.source]]
name = "bink-pypi"
url = "https://pypi.tools.uksouth.bink.sh/simple"
default = false
secondary = false

[tool.poetry.dependencies]
python = "^3.10"
Flask = "^2.2.2"
Flask-Admin = "^1.6.0"
psycopg2-binary = "^2.9.3"
Authlib = "^1.1.0"
requests = "^2.28.1"
python-dotenv = "^0.21.0"
SQLAlchemy = "^1.4.41"
PyYAML = "^6.0"
pydantic = "^1.10.2"
azure-keyvault = "^4.2.0"
azure-identity = "^1.11.0"
sentry-sdk = {extras = ["flask"], version = "^1.9.9"}
gunicorn = "^20.1.0"
redis = "^4.3.4"
rq = "^1.11.1"
Flask-WTF = "^1.0.1"
retry-tasks-lib = {version = "^2.0.0", source = "bink-pypi"}
cosmos-message-lib = {version = "^1.2.0", source = "bink-pypi"}

[tool.poetry.group.dev.dependencies]
mypy = "^0.971"
black = "^22.8.0"
isort = "^5.10.1"
pytest = "^7.1.3"
pytest-cov = "^3.0.0"
xenon = "^0.9.0"
types-Flask = "^1.1.6"
types-PyYAML = "^6.0.12"
types-redis = "^4.3.21"
types-requests = "^2.28.11"
httpretty = "^1.1.4"
pytest-mock = "^3.8.2"
pylint = "^2.15.3"
pylint-pytest = "^1.1.2"
ipython = "^8.5.0"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
lines_between_types = 1

[tool.mypy]
disallow_untyped_defs = true
show_error_codes = true
warn_unused_ignores = true
ignore_missing_imports = true
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin",
]

[tool.pylint.MASTER]
load-plugins=[
    "pylint_pytest",
    "pylint.extensions.mccabe"
]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    # "logging-fstring-interpolation",
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "too-few-public-methods",
    "consider-using-f-string",
    "duplicate-code", # pylint definition of "duplicate" is way too loose (ex: fastapi route definitions are flagged).
    "too-many-ancestors", # flask admin views require a lot of inheritance
    "protected-access", # flask admin validators need to access _obj
    "broad-except", # we often need to catch all exceptions to flash.error them
]
good-names=["k", "v", "i", "q", "fn", "ex", "dt", "tz", "c", "p"]
ignored-classes=[
    "scoped_session"
]
extension-pkg-whitelist=[
    "pydantic",
]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = '^((?P<epoch>\d+)!)?(?P<base>\d+(\.\d+)*)'

[tool.poetry-dynamic-versioning.substitution]
files = ['event_horizon/version.py']

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
